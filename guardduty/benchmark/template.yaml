AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    This function is invoked by AWS CloudWatch events in response to state change in your AWS resources which matches a event target definition. The event payload received is then forwarded to Sumo Logic HTTP source endpoint.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 300

Metadata:
  AWS::ServerlessRepo::Application:
    Name: sumologic-amazon-guardduty-benchmark
    Description: This solution installs the Guardduty Benchmark App, creates collectors/sources in Sumo Logic platform and deploys the lambda function in your AWS account using configuration provided at the time of sam application deployment.
    Author: SumoLogic
    SpdxLicenseId: Apache-2.0
    LicenseUrl: "./../../licence.txt"
    ReadmeUrl: "./README.md"
    Labels:
    - lambda
    - sumologic
    - serverless
    - guarduty
    - benchmark
    HomePageUrl: https://github.com/SumoLogic/sumologic-aws-lambda
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/SumoLogic/sumologic-aws-lambda

  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Sumo Logic Deployment Configuration"
        Parameters:
          - SumoDeployment
          - SumoAccessID
          - SumoAccessKey
      -
        Label:
          default: "Collection Configuration"
        Parameters:
          - CollectorName
          - SourceName
          - SourceCategoryName
          - RemoveSumoResourcesOnDeleteStack
    ParameterLabels:
      SumoDeployment:
        default: "Deployment Name"
      SumoAccessID:
        default: "Access ID"
      SumoAccessKey:
        default: "Access Key"
      CollectorName:
        default: "Collector Name"
      SourceName:
        default: "Source Name"
      SourceCategoryName:
        default: "Source Category Name"
      RemoveSumoResourcesOnDeleteStack:
        default: "Remove Sumo Resources On Delete Stack"

Parameters:
  CollectorName:
    Type: String
    Default: GuarddutyCollector
  SourceName:
    Type: String
    Default: GuarddutyEvents
  SourceCategoryName:
    Type: String
    Default: Labs/AWS/Guardduty
  SumoAccessID:
    Type: String
  SumoAccessKey:
    Type: String
  SumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
    Description: "Enter au, ca, de, eu, jp, us2, or us1"
  RemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: false
    Description: To delete collector, sources and app when stack is deleted, set this parameter to true. Default is false.
    Type: String

Resources:
  CloudWatchEventFunction:
    Properties:
      CodeUri: ../src/
      Environment:
        Variables:
          SUMO_ENDPOINT: !GetAtt SumoHTTPSource.SUMO_ENDPOINT
      Events:
        CloudWatchEventTrigger:
          Properties:
            Pattern:
              source:
              - aws.guardduty
          Type: CloudWatchEvent
      Handler: cloudwatchevents.handler
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function

  SumoAppUtils:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.handler
      Runtime: python3.7
      CodeUri: "../../sumologic-app-utils/src/"
      MemorySize: 128
      Timeout: 300


  SumoHostedCollector:
    Type: Custom::Collector
    Properties:
      ServiceToken: !GetAtt SumoAppUtils.Arn
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      CollectorName: !Ref CollectorName
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  SumoHTTPSource:
    Type: Custom::HTTPSource
    Properties:
      ServiceToken: !GetAtt SumoAppUtils.Arn
      Region: !Ref "AWS::Region"
      SourceName: !Ref SourceName
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref SourceCategoryName
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      DateFormat: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
      DateLocatorRegex: '.*"updatedAt":"(.*)".*'

  SumoGuardDutyBenchmarkApp:
    Type: Custom::App
    Properties:
      ServiceToken: !GetAtt SumoAppUtils.Arn
      Region: !Ref "AWS::Region"
      AppName: "Amazon GuardDuty Benchmark"
      AppId: "8e7efcb3-040a-4a92-9f8d-922fafb24afb"
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      AppSources:
        gdbenchmark: !Sub "_sourceCategory=${SourceCategoryName}"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

Outputs:

    CloudWatchEventFunction:
      Description: "CloudWatchEvent Processor Function ARN"
      Value: !GetAtt CloudWatchEventFunction.Arn
    GuarddutyBenchmarkAppFolder:
      Description: "Folder Name"
      Value: !GetAtt SumoGuardDutyBenchmarkApp.APP_FOLDER_NAME
